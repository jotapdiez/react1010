{"version":3,"sources":["constants.js","NextPieces/Actions.js","Score/Actions.js","Board/index.js","Score/index.js","Piece/index.js","NextPieces/index.js","App.js","serviceWorker.js","NextPieces/Store.js","Score/Store.js","store.js","index.js"],"names":["COLS","ALLOWED_DROP_EFFECT","DRAG_DROP_CONTENT_TYPE","MATRIX_PIECES","use","id","type","payload","add","count","points","drop","STATUS_WRONG","STATUS_OK","DEFAULT_BOARD","Array","fill","placed","status","color","Board","props","dispatch","useDispatch","_useState","useState","_useState2","Object","slicedToArray","piecesAdded","setPiecesAdded","idValidDropTarget","e","dataTransfer","getData","target","attributes","value","onDragLeave","data","JSON","parse","row","parseInt","col","pieceMatrix","matrix","stringify","r","mr","c","mc","checkPieceColision","someError","react_default","a","createElement","Fragment","TransitionGroup","className","onDrop","scoreActions","find","flatten","tgtPoint","console","log","tr","tc","pieceScore","padded","absRowIndex","absColIndex","nextPieceActions","changes","allPiecesPlaced","every","forEach","someNotPlaced","checkLines","addPiece","onDragEnd","onDragEnter","onDragOver","preventDefault","map","rowIndex","cols","colIndex","blockValue","CSSTransition","in","key","timeout","classNames","colindex-data","rowindex-data","renderColumns","Score","_useSelector","useSelector","store","score","drops","anim","setAnim","useEffect","onEntered","COLORS","Piece","pick","setPick","_useState3","Math","floor","random","length","colorClass","style","draggable","onDragStart","persist","event","nativeEvent","effectAllowed","index","pickedFrom","setData","dropEffect","classes","push","join","onMouseDown","NextPieces","allNextPieces","nextPiece","piece","App","Boolean","window","location","hostname","match","initial","lastId","combineReducers","state","arguments","undefined","action","result","i","randomIndex","addRandomPiece","remove","assign","ReactDOM","render","es","createStore","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b6b1ea5.chunk.js","sourcesContent":["// var keyMirror = require('keymirror');\r\n\r\nexport const ROWS =  9;\r\nexport const COLS = 15;\r\nexport const BLOCK_HEIGHT = 50;\r\nexport const BLOCK_WIDTH  =  5;\r\nexport const ALLOWED_DROP_EFFECT = 'move';\r\nexport const DRAG_DROP_CONTENT_TYPE = 'custom_container_type';\r\n\r\nexport const MATRIX_PIECES = [\r\n    [ //0\r\n        [1],\r\n        [1],\r\n        [1],\r\n        [1, 1, 1, 1]\r\n    ],\r\n    [ //1\r\n        [1, 1, 1, 1],\r\n        [1],\r\n        [1],\r\n        [1]\r\n    ],\r\n    [ //2\r\n        [1],\r\n        [1],\r\n        [1],\r\n        [1]\r\n    ],\r\n    [ //3\r\n        [1, 1],\r\n        [1, 1]\r\n    ],\r\n    [ //4\r\n        [1, 1, 1],\r\n        [1, 1, 1],\r\n        [1, 1, 1]\r\n    ],\r\n    [ //5\r\n        [1, 1, 1],\r\n        [1, 0, 0],\r\n        [1, 0, 0]\r\n    ],\r\n    [ //6\r\n        [1, 1, 1],\r\n        [0, 0, 1],\r\n        [0, 0, 1]\r\n    ],\r\n    [ //7\r\n        [1, 1, 1, 1]\r\n    ],\r\n    [ //8\r\n        [1]\r\n    ],\r\n    [ //9\r\n        [1, 1]\r\n    ],\r\n    [ //10\r\n        [1, 1, 1]\r\n    ],\r\n    [ //11\r\n        [1],\r\n        [1],\r\n        [1]\r\n    ],\r\n    [ //12\r\n        [1],\r\n        [1, 1]\r\n    ],\r\n    [ //13\r\n        [1],\r\n        [1]\r\n    ]\r\n];\r\n\r\n\r\n","export const use = id => ({\r\n    type: 'use',\r\n    payload: id\r\n});\r\n\r\nexport const add = (count) => ({\r\n    type: 'add',\r\n    payload: count\r\n});\r\n\r\n","export const add = points => ({\r\n    type: 'score_add',\r\n    payload: points\r\n});\r\n\r\nexport const drop = () => ({\r\n    type: 'score_drop'\r\n});\r\n","import React, { useState } from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { ROWS, COLS, DRAG_DROP_CONTENT_TYPE } from '../constants';\r\nimport { flatten, find, every, forEach } from 'lodash';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as nextPieceActions from '../NextPieces/Actions';\r\nimport * as scoreActions from '../Score/Actions';\r\n\r\nconst STATUS_WRONG = 1;\r\nconst STATUS_OK = 2;\r\nconst DEFAULT_PIECE = { id:null, placed: false, status: 0, color:null };\r\nconst DEFAULT_BOARD = Array(ROWS).fill(Array(COLS).fill(DEFAULT_PIECE));\r\n\r\nexport default function Board(props){\r\n    // static propTypes = {\r\n    //     prop: PropTypes\r\n    // }\r\n\tconst dispatch = useDispatch();\r\n\tconst [piecesAdded, setPiecesAdded] = useState(DEFAULT_BOARD);\r\n\r\n\tconst onDragOverItem = (e)  => {\r\n\t\te.preventDefault();\r\n\t}\r\n\r\n\tconst onDragEnter = (e)  => {\r\n\t\tif (!idValidDropTarget(e)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar data = JSON.parse(e.dataTransfer.getData(DRAG_DROP_CONTENT_TYPE));\r\n\t\tlet tgtPoint = {\r\n\t\t\tr: parseInt(e.target.attributes[\"rowindex-data\"].value),\r\n\t\t\tc: parseInt(e.target.attributes[\"colindex-data\"].value)\r\n\t\t};\r\n\r\n\t\tcheckPieceColision(data.matrix, tgtPoint.r, tgtPoint.c);\r\n\t}\r\n\r\n\tconst idValidDropTarget = (e) => {\r\n\t\tif (!e.dataTransfer.getData(DRAG_DROP_CONTENT_TYPE) ||\r\n\t\t\t!e.target.attributes[\"rowindex-data\"] || !e.target.attributes[\"colindex-data\"].value){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tconst onDragLeave = (e)  => {\r\n\t\tif (!idValidDropTarget(e)){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar data = JSON.parse(e.dataTransfer.getData(DRAG_DROP_CONTENT_TYPE));\r\n\t\tconst row = parseInt(e.target.attributes[\"rowindex-data\"].value);\r\n\t\tconst col = parseInt(e.target.attributes[\"colindex-data\"].value);\r\n\r\n\t\tconst pieceMatrix = data.matrix;\r\n\t\tvar matrix = JSON.parse(JSON.stringify(piecesAdded));\r\n\t\tfor (var r in pieceMatrix) {\r\n\t\t\tvar mr = parseInt(r) + parseInt(row);\r\n\t\t\tif (!matrix[mr]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var c in pieceMatrix[r]) {\r\n\t\t\t\tvar mc = parseInt(c) + parseInt(col);\r\n\t\t\t\tif (!matrix[mr][mc]){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (pieceMatrix[r][c] === 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmatrix[mr][mc].status = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetPiecesAdded(matrix);\r\n\t}\r\n\r\n\tconst checkPieceColision = (pieceMatrix, row, col) => {\r\n\t\tconst matrix = JSON.parse(JSON.stringify(piecesAdded));\r\n\t\tlet someError = false;\r\n\t\tfor (let r in pieceMatrix){\r\n\t\t\tfor (let c in pieceMatrix[r]){\r\n\t\t\t\tif (pieceMatrix[r][c] === 0){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst mr = parseInt(r) + parseInt(row);\r\n\t\t\t\tconst mc = parseInt(c) + parseInt(col);\r\n\t\t\t\tif (!matrix[mr] || !matrix[mr][mc] ||\r\n\t\t\t\t\tmatrix[mr][mc].placed){\r\n\t\t\t\t\tsomeError = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let r in pieceMatrix) {\r\n\t\t\tfor (let c in pieceMatrix[r]) {\r\n\t\t\t\tif (pieceMatrix[r][c] === 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst mr = parseInt(r) + parseInt(row);\r\n\t\t\t\tconst mc = parseInt(c) + parseInt(col);\r\n\t\t\t\tif (!matrix[mr] || !matrix[mr][mc]) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmatrix[mr][mc].status = (someError ? STATUS_WRONG : STATUS_OK);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetPiecesAdded(matrix);\r\n\t}\r\n\r\n\tconst onDrop = (e)  => {\r\n\t\tdispatch(scoreActions.drop());\r\n\t\tonDragLeave(e);\r\n\t\tif (!idValidDropTarget(e)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst someError = find(flatten(piecesAdded), (e) => e.status === STATUS_WRONG);\r\n\t\tif (someError){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar data = JSON.parse(e.dataTransfer.getData(DRAG_DROP_CONTENT_TYPE));\r\n\t\tlet tgtPoint = {\r\n\t\t\tr: parseInt(e.target.attributes[\"rowindex-data\"].value),\r\n\t\t\tc: parseInt(e.target.attributes[\"colindex-data\"].value)\r\n\t\t};;\r\n\t\tif (checkPieceColision(data.matrix, tgtPoint.r, tgtPoint.c)){\r\n\t\t\tconsole.log('Board:: onDrop:: checkPieceColision=true');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\taddPiece(data, tgtPoint.r, tgtPoint.c);\r\n\t};\r\n\r\n\tconst onDragEnd = (e)  => {\r\n\t};\r\n\r\n\tfunction addPiece(data, tr, tc) {\r\n\t\tlet pieceScore = 0;\r\n\t\tlet padded = JSON.parse(JSON.stringify(piecesAdded));\r\n\t\tfor (let r in data.matrix){\r\n\t\t\tfor (let c in data.matrix[r]){\r\n\t\t\t\tif (data.matrix[r][c] === 1){\r\n\t\t\t\t\tconst absRowIndex = parseInt(tr) + parseInt(r);\r\n\t\t\t\t\tconst absColIndex = parseInt(tc) + parseInt(c);\r\n\r\n\t\t\t\t\t++pieceScore;\r\n\t\t\t\t\tpadded[absRowIndex][absColIndex].id = data.id+\"\"+r+\"\"+c;\r\n\t\t\t\t\tpadded[absRowIndex][absColIndex].placed = true;\r\n\t\t\t\t\tpadded[absRowIndex][absColIndex].status = 0;\r\n\t\t\t\t\tpadded[absRowIndex][absColIndex].color = data.color;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdispatch(nextPieceActions.use(data.id));\r\n\t\tdispatch(scoreActions.add(pieceScore));\r\n\t\tcheckLines(padded);\r\n\t\tsetPiecesAdded(padded);\r\n\t};\r\n\r\n\tfunction checkLines(padded){\r\n\t\tlet changes = 0;\r\n\t\t//Horizontales\r\n\t\tfor (let r in padded) {\r\n\t\t\tif (!find(padded[r], e=>e.placed)){\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst allPiecesPlaced = every(padded[r], ['placed', true]);\r\n\t\t\tif (allPiecesPlaced){\r\n\t\t\t\t++changes;\r\n\t\t\t\t//eliminar linea r\r\n\t\t\t\tforEach(padded[r],e=>{\r\n\t\t\t\t\te.placed = false;\r\n\t\t\t\t\te.color = null;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Verticales\r\n\t\tfor (let c = 0; c < COLS ; ++c){\r\n\t\t\tlet someNotPlaced = false;\r\n\t\t\tfor (let r in padded) {\r\n\t\t\t\tif (!padded[r][c].placed){\r\n\t\t\t\t\tsomeNotPlaced = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!someNotPlaced){\r\n\t\t\t\t++changes;\r\n\t\t\t\t//Eliminar columna c\r\n\t\t\t\tfor (let r in padded) {\r\n\t\t\t\t\tpadded[r][c].placed = false;\r\n\t\t\t\t\tpadded[r][c].color = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (changes > 0){\r\n\t\t\t//TODO: Multiplicar por lineas\r\n\t\t\tdispatch(scoreActions.add(10*changes));\r\n\t\t}\r\n\t}\r\n\t// function hardcode(){\r\n\t// \tlet padded = JSON.parse(JSON.stringify(piecesAdded));\r\n\t// \tfor (let c = 1; c < COLS; ++c) {\r\n\t// \t\tpadded[0][c].placed = true;\r\n\t// \t\tpadded[1][c].placed = true;\r\n\t// \t}\r\n\t// \tsetPiecesAdded(padded);\r\n\t// }\r\n\r\n\tfunction renderColumns(col, colIndex, rowIndex){\r\n\t\tlet blockValue = \"empty\";\r\n\t\tif (col.status !== 0) {\r\n\t\t\tblockValue = col.status === STATUS_WRONG ? 'dragEnterWrong' : 'dragEnterOk';\r\n\t\t} else if (col.placed) {\r\n\t\t\tblockValue = 'piece';\r\n\t\t}\r\n\r\n\t\treturn (<CSSTransition\r\n\t\t\tin={col.placed}\r\n\t\t\tkey={rowIndex + \"\" + colIndex}\r\n\t\t\ttimeout={100}\r\n\t\t\tclassNames=\"column\">\r\n\t\t\t<div key={colIndex} colindex-data={colIndex} rowindex-data={rowIndex} className={(col.color ? col.color + ' ':'')  + \"column \" + blockValue} />\r\n\t\t</CSSTransition>);\r\n\t}\r\n\r\n\treturn (<>\r\n\t\t{/*<span onClick={hardcode}>harcode</span> */}\r\n\t\t<TransitionGroup className=\"board\"\r\n\t\t\t\tonDrop={onDrop} onDragEnd={onDragEnd} onDragEnter={onDragEnter} onDragLeave={onDragLeave} onDragOver={onDragOverItem}>\r\n\t\t\t{piecesAdded.map((row, rowIndex) => {\r\n\t\t\t\tconst cols = row.map((col, colIndex) => renderColumns(col, colIndex, rowIndex));\r\n\t\t\t\treturn (<div key={'r' + rowIndex} className=\"board_row\">{cols}</div>);\r\n\t\t\t})}\r\n\t\t</TransitionGroup>\r\n\t</>);\r\n}\r\n","import React, {useState,useEffect} from 'react'\r\nimport { useSelector } from 'react-redux';\r\n// import { createSelector } from 'reselect'\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './score.css';\r\n\r\n// const storeSelector = createSelector(\r\n//     score => state.todos,\r\n//     drops => state.drops\r\n// );\r\n\r\nexport default function Score(){\r\n    // const { score, drops } = useSelector(storeSelector);\r\n    const { score, drops } = useSelector(store => {\r\n        console.log('store:', store);\r\n\r\n        return store.score;\r\n    });\r\n    const [anim, setAnim] = useState(false);\r\n    useEffect(()=>{\r\n        setAnim(true);\r\n    }, [score]);\r\n    return (<div className=\"score\">\r\n        <span>\r\n            <strong>Puntaje:</strong>\r\n        </span>\r\n        <CSSTransition\r\n            in={anim}\r\n            timeout={100}\r\n            onEntered={() => setAnim(false)}\r\n            classNames=\"score-text\">\r\n            <div className=\"score-text\">{score}</div>\r\n        </CSSTransition>\r\n        <br />\r\n        <span>\r\n            <strong>Movimientos:</strong>\r\n        </span>\r\n            <div>{drops}</div>\r\n    </div>);\r\n}\r\n","import React, { useState } from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport { MATRIX_PIECES, ALLOWED_DROP_EFFECT, DRAG_DROP_CONTENT_TYPE } from '../constants';\r\nimport './styles.css';\r\nconst COLORS = [\r\n\t\t\"bg-primary\",\r\n\t\t\"bg-secondary\",\r\n\t\t\"bg-success\",\r\n\t\t\"bg-danger\",\r\n\t\t\"bg-warning\",\r\n\t\t\"bg-info\",\r\n\t\t// \"bg-light\",\r\n\t\t\"bg-dark\",\r\n\t\t// \"bg-white\"\r\n\t];\r\n\r\nexport default function Piece(props) {\r\n\tconst [pick, setPick] = useState({});\r\n\tconst [colorClass/*, setColor*/] = useState(COLORS[Math.floor(Math.random() * COLORS.length)]);\r\n\r\n    const onDragStart = (e) => {\r\n\t\te.persist();\r\n\t\tlet event = e.nativeEvent;\r\n\t\tevent.dataTransfer.effectAllowed = ALLOWED_DROP_EFFECT;\r\n\r\n\t\tvar data = {\r\n\t\t\tmatrix: MATRIX_PIECES[props.index],\r\n\t\t\tpickedFrom: pick,\r\n\t\t\tid: props.id,\r\n\t\t\tcolor: colorClass\r\n\t\t};\r\n\t\tevent.dataTransfer.setData(DRAG_DROP_CONTENT_TYPE, JSON.stringify(data));\r\n\t\tevent.dataTransfer.dropEffect = \"move\";\r\n    };\r\n\r\n    const selectPiecePortion = (row, column) => {\r\n        setPick({\r\n            r: row,\r\n            c: column\r\n        });\r\n    };\r\n\r\n\treturn (<div style={props.style} className=\"pieceCointainer\" draggable='true' onDragStart={(e)=>{e.persist(); onDragStart(e);}}>\r\n\t\t\t\t{MATRIX_PIECES[props.index].map((row, r) => {\r\n\t\t\t\t\t// console.log('Color: ' + colorClass, ' - length: ', COLORS.length);\r\n\r\n\t\t\t\t\t// const colorClass = colors[Math.floor(Math.random() * colors.length)];\r\n\t\t\t\t\tconst cols = row.map((col, c) => {\r\n\t\t\t\t\t\tlet classes = [\"piece_column\"];\r\n\t\t\t\t\t\tclasses.push(col === 1 ? 'piece' : 'empty');\r\n\t\t\t\t\t\tif (col === 1){\r\n\t\t\t\t\t\t\tclasses.push(colorClass);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// var pieceObj = (<div key={\"pcol\" + c} className=\"piece_column empty\"> </div>);\r\n\t\t\t\t\t\t// if (col === 1) {\r\n\t\t\t\t\t\t// \tpieceObj = (<div key={\"pcol\" + c} className=\"piece_column piece\" onMouseDown={e => selectPiecePortion(r, c)}> </div>);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t// return <div key={\"pcol\" + c} className=\"piece_column\">{pieceObj}</div>;\r\n\t\t\t\t\t\t// return pieceObj;\r\n\t\t\t\t\t\treturn (<div key={\"pcol\" + c} className={classes.join(' ')} onMouseDown={e => {\r\n\t\t\t\t\t\t\t\tif (col ===1) selectPiecePortion(r, c)\r\n\t\t\t\t\t\t\t}}/>);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn <div key={'r' + r} className=\"piece_row\">{cols}</div>;\r\n\t\t\t\t})}\r\n\t\t\t</div>);\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Piece from '../Piece'\r\nimport { add } from './Actions';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nexport default function NextPieces(props) {\r\n    const dispatch = useDispatch();\r\n    const allNextPieces = useSelector(store => store.nextPiece);\r\n    useEffect(() => {\r\n        if (allNextPieces.length === 0) {\r\n            dispatch(add(5));\r\n        }\r\n    });\r\n\r\n    return (<TransitionGroup className=\"nextPieces\">\r\n            {allNextPieces.map(piece => {\r\n                return (<CSSTransition\r\n                    key={piece.id}\r\n                    timeout={200}\r\n                    classNames=\"nextPieces\"\r\n                >\r\n                    <Piece key={piece.id} id={piece.id} className=\"nextPiece\" index={piece.index} />\r\n                </CSSTransition>);\r\n            })}\r\n        </TransitionGroup>);\r\n}\r\n","import React from 'react';\r\nimport Board from './Board'\r\nimport Score from './Score'\r\nimport NextPieces from './NextPieces'\r\n// import logo from './logo.svg';\r\nimport './styles.css';\r\n\r\nfunction App() {\r\n  return (<div className=\"row\">\r\n    <div className=\"col-md-4\">\r\n      <h1>React<span className=\"text-danger\">10</span><span className=\"text-primary\">10</span>!</h1>\r\n        <Score/>\r\n        <NextPieces/>\r\n    </div>\r\n    <div className=\"col-md-8\">\r\n      <Board />\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { MATRIX_PIECES } from '../constants';\r\nimport { remove } from 'lodash';\r\n\r\nconst initial = [];\r\n\r\nlet lastId = 5;\r\n\r\nexport default function reduce(state = initial, action){\r\n\tswitch (action.type) {\r\n\t\tcase 'add':\r\n\t\t\treturn addRandomPiece(state, action.payload);\r\n\t\tcase 'use':\r\n\t\t\treturn use(state, action.payload);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nfunction addRandomPiece(state, count){\r\n\tlet result = JSON.parse(JSON.stringify(state));\r\n\r\n\tfor (let i = 0; i < count; ++i) {\r\n\t\tvar randomIndex = Math.floor(Math.random() * MATRIX_PIECES.length);\r\n\t\t// console.log('randomIndex = ', randomIndex);\r\n\t\tresult.push({ id: ++lastId, index: randomIndex });\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nfunction use(state, id){\r\n\tlet result = JSON.parse(JSON.stringify(state));\r\n\tremove(result, e => e.id === id );\r\n\r\n\treturn result;\r\n}\r\n","const initial ={\r\n    drops: 0,\r\n    score: 0\r\n};\r\n\r\nexport default function reduce(state = initial, action) {\r\n    // console.log('action: ', action);\r\n    // console.log('state', state);\r\n    // console.table(state);\r\n    let result = Object.assign({}, state);\r\n    switch (action.type) {\r\n        case 'score_add':\r\n            result.score += action.payload;\r\n            return result;\r\n        case 'score_drop':\r\n            // let result = Object.assign({}, state);\r\n            ++result.drops;\r\n            console.log('result: ', result);\r\n\r\n            return result;\r\n        default:\r\n            // console.log('Invalid action \"'+action.type+'\"');\r\n            return state;\r\n        // throw new Error('Invalid action');\r\n        // \tbreak;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport NextPieceStore from './NextPieces/Store';\r\nimport ScoreStore from './Score/Store';\r\n\r\nexport default combineReducers({\r\n    nextPiece: NextPieceStore,\r\n    score: ScoreStore\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport store from './store';\r\nimport { createStore } from 'redux';\r\n\r\nReactDOM.render(<Provider store={createStore(store)}>\r\n            <App />\r\n        </Provider>, document.getElementById('root'));\r\n// ReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}